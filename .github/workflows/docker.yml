name: Build Docker

on:
  push:
    tags:
      - '*'

jobs:
  sqlite:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta-sqlite
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/gothenburgbitfactory/taskchampion-sync-server
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=match,pattern=\d.\d.\d,value=latest
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          path: "{context}/Dockerfile-sqlite"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-sqlite.outputs.tags }}
          labels: ${{ steps.meta-sqlite.outputs.labels }}
  postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta-postgres
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/gothenburgbitfactory/taskchampion-sync-server-postgres
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=match,pattern=\d.\d.\d,value=latest
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          path: "{context}/Dockerfile-postgres"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-postgres.outputs.tags }}
          labels: ${{ steps.meta-postgres.outputs.labels }}
